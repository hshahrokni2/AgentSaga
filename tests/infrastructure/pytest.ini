[pytest]
# Pytest configuration for SVOA Lea Infrastructure Tests

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = 
    tests/infrastructure

# Minimum Python version
minversion = 3.9

# Add current directory to Python path
addopts = 
    --strict-markers
    --tb=short
    --verbose
    --cov=infrastructure
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=95
    --maxfail=1
    --disable-warnings
    -p no:warnings
    --color=yes
    --durations=10
    --show-capture=no

# Custom markers
markers =
    integration: Integration tests requiring AWS resources
    performance: Performance and load tests  
    security: Security scanning and validation tests
    compliance: EU/GDPR compliance tests
    slow: Tests that take > 5 seconds
    critical: Critical tests that must pass for production
    terraform: Terraform/IaC specific tests
    kubernetes: Kubernetes/container orchestration tests
    network: Network and firewall tests
    secrets: Secrets management tests
    cicd: CI/CD pipeline tests
    swedish: Swedish regulatory compliance tests

# Test output formatting
console_output_style = progress

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/infrastructure/test.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = infrastructure
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

# Timeout for tests (seconds)
timeout = 300
timeout_method = thread

# Parallel execution
[pytest-xdist]
numprocesses = auto

# Flake8 integration
[flake8]
max-line-length = 120
exclude = .git,__pycache__,venv,.venv,build,dist
ignore = E203,W503

# MyPy integration
[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
ignore_missing_imports = True

# Environment variables for testing
[pytest.env]
ENVIRONMENT = test
AWS_REGION = eu-north-1
AWS_DEFAULT_REGION = eu-north-1
TERRAFORM_VERSION = 1.6.0
KUBERNETES_VERSION = 1.28
TESTING = true